@using Candy.Models
@using PagedList.Mvc
@model PagedList.PagedList<Candy.Models.Order>

@{
    ViewBag.Title = "OrderList";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 class="text-center" style="background: linear-gradient(to right, #0d47a1, #1976d2); -webkit-background-clip: text; color: transparent;">
    ORDER MANAGEMENT
</h2>
<div style="height:20px"></div>
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

<style>
    .card-box {
        background-color: #ffffff;
        border: 1px solid #e3e6f0;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 30px;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

        .card-box:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            transform: translateY(-5px);
        }

    .card-customer {
        background: linear-gradient(to right, #0d47a1, #1976d2);
        color: #ffffff;
    }

    .card-status {
        background: linear-gradient(to right, #ff9800, #f57c00); /* Orange */
        color: #ffffff;
    }

    .card-books {
        background-color: #81c784; /* Light Green */
        color: #ffffff;
    }

    .card-orders {
        background: linear-gradient(to right, #0d47a1, #66bb6a);
        color: #ffffff;
    }

    .widget-style1 {
        font-size: 16px;
    }

    .widget-data .h4 {
        margin-bottom: 0;
        font-size: 2rem;
        font-weight: 700;
    }

    .widget-data .weight-600 {
        font-weight: 600;
        font-size: 14px;
        color: #ecf0f1;
    }

    .mb-30 {
        margin-bottom: 30px;
    }

    .height-100-p {
        height: 100%;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;
        justify-content: space-between;
    }

    .col-xl-3, .col-md-6 {
        padding-right: 15px;
        padding-left: 15px;
        flex: 0 0 31%;
        max-width: 31%;
    }

    .btn-delivered {
        background-color: #4CAF50; /* Green for delivered */
        color: #ffffff;
        border: none;
    }

        .btn-delivered:hover {
            background-color: #388E3C; /* Darker green on hover */
        }

    .btn-not-delivered {
        background-color: #FFC107; /* Yellow-amber for not delivered */
        color: #ffffff;
        border: none;
    }

        .btn-not-delivered:hover {
            background-color: #FF9800; /* Darker amber on hover */
        }
</style>

<!-- Statistics Cards -->
<div class="row">
    <div class="col-xl-3 col-md-6 mb-30">
        <div class="card-box height-100-p widget-style1 card-customer">
            <div class="d-flex flex-wrap align-items-center">
                <div class="widget-data">
                    <div class="h4 mb-0">@ViewBag.TotalUser</div>
                    <div class="weight-600 font-14">USERS</div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-30">
        <div class="card-box height-100-p widget-style1 card-books">
            <div class="d-flex flex-wrap align-items-center">
                <div class="widget-data">
                    <div class="h4 mb-0">@ViewBag.TotalProduct </div>
                    <div class="weight-600 font-14">PRODUCTS</div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-30">
        <div class="card-box height-100-p widget-style1 card-orders">
            <div class="d-flex flex-wrap align-items-center">
                <div class="widget-data">
                    <div class="h4 mb-0">@ViewBag.TotalOrders</div>
                    <div class="weight-600 font-14">ORDERS</div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .table, .table th, .table td {
        font-size: 1.2em;
    }

    .MenuTrang {
        font-size: 1.2em;
    }
</style>

<table class="table">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Total Amount</th>
            <th>Shipping Address</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderID</td>
                <td>@order.OrderDate</td>
                <td>@order.TotalAmount</td>
                <td>@order.ShippingAddress</td>
                <td>@order.Status</td>
                <td>
                    @if (order.Status == "Pending Confirmation")
                    {
                        @Html.ActionLink("Approve", "UpdateOrderStatus", new { orderId = order.OrderID, newStatus = "Awaiting Pickup" }, new { @class = "btn btn-success" })
                    }
                    @if (order.Status == "Awaiting Pickup")
                    {
                        @Html.ActionLink("Pickup", "UpdateOrderStatus", new { orderId = order.OrderID, newStatus = "Awaiting Delivery" }, new { @class = "btn btn-primary" })
                    }
                    @if (order.Status == "Awaiting Delivery")
                    {
                        @Html.ActionLink("Deliver", "UpdateOrderStatus", new { orderId = order.OrderID, newStatus = "Delivered" }, new { @class = "btn btn-warning" })
                    }
                    @if (order.Status == "Delivered")
                    {
                        @Html.ActionLink("Review", "UpdateOrderStatus", new { orderId = order.OrderID, newStatus = "Reviewed" }, new { @class = "btn btn-info" })
                    }
                    @if (order.Status != "Cancelled")
                    {
                        @Html.ActionLink("Cancel", "UpdateOrderStatus", new { orderId = order.OrderID, newStatus = "Cancelled" }, new { @class = "btn btn-danger" })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<p>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
</p>
<div class="MenuTrang">
    @Html.PagedListPager(Model, page => Url.Action("OrderList", new { page = page }))
</div>
